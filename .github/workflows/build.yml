name: cmake-build

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  IDASDK_VERSION: "9.1.250226"
  URL_TO_IDASDK_ZIP: https://vaclive.party/software/ida-pro/releases/download/9.1.250226/idasdk91.zip
  SHA256_IDASDK_ZIP: 508f690e49ab0415a3f8d422826954ac8d3ae9b92f48121fcd1e53c68bc7e1f2
  PATH_TO_IDASDK_CONTENT: idasdk91

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
        - os: macos-latest
        - os: windows-latest
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        repository: google/bindiff
        path: bindiff

    - uses: actions/checkout@v4
      with:
        repository: google/binexport
        path: binexport

    - name: Install ninja-build tool
      uses: aseprite/get-ninja@main

    - name: Get idasdk
      if: matrix.os != 'windows-latest'
      shell: bash
      run: |
        mkdir -p build/out build/ida
        curl -L -o build/idasdk.zip "${{ env.URL_TO_IDASDK_ZIP }}"
        echo "${{ env.SHA256_IDASDK_ZIP }}  build/idasdk.zip" | sha256sum -c -
        if [ $? -ne 0 ]; then
          echo "[!] SHA256 checksum does not match. Aborting."
          exit 1
        fi
        unzip -q build/idasdk.zip -d build/ida/

    - name: Get idasdk (Windows)
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        mkdir -p build\out
        mkdir -p build\ida
        Invoke-WebRequest -Uri "${{ env.URL_TO_IDASDK_ZIP }}" -OutFile "build\idasdk.zip"
        $sha256 = Get-FileHash -Path "build\idasdk.zip" -Algorithm SHA256
        if ($sha256.Hash -ne "${{ env.SHA256_IDASDK_ZIP }}") {
          Write-Host "[!] SHA256 checksum does not match. Aborting."
          exit 1
        }
        Expand-Archive -Path "build\idasdk.zip" -DestinationPath "build\ida\" -Force

    - name: Enable Developer Command Prompt (Windows)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1.12.1

    - name: Enable mold linker (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: rui314/setup-mold@v1

    - name: Configure CMake
      shell: bash
      run: |
        cmake -S bindiff -B build/out -G Ninja \
          "-DCMAKE_BUILD_TYPE=${BUILD_TYPE}" \
          -DCMAKE_INSTALL_PREFIX=build/out \
          -DBINDIFF_BINEXPORT_DIR=binexport \
          "-DIdaSdk_ROOT_DIR=build/ida/${{ env.PATH_TO_IDASDK_CONTENT }}"
          -DBOOST_ROOT=binexport/boost_parts \
          -DCMAKE_PREFIX_PATH=binexport/boost_parts

    - name: Build
      working-directory: build/out
      shell: bash
      run: cmake --build . --config "${BUILD_TYPE}"

    - name: Test
      working-directory: build/out
      shell: bash
      run: ctest --build-config "${BUILD_TYPE}" --output-on-failure -R '^[A-Z]'

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: BinDiff-ForIDASDK-${{ env.IDASDK_VERSION }}-${{ runner.os }}
        path: |
          build/out/bindiff
          build/out/ida/bindiff*
          build/out/tools/bindiff*
